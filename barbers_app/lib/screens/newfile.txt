class CreateBarberDialog extends StatefulWidget {
  const CreateBarberDialog({Key? key}) : super(key: key);

  @override
  _CreateBarberDialogState createState() => _CreateBarberDialogState();
}

class _CreateBarberDialogState extends State<CreateBarberDialog> {
  final _nameController = TextEditingController();
  final _descriptionController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      content: SingleChildScrollView(
        child: Column(
          children: [
            TextField(
              controller: _nameController,
              decoration: const InputDecoration(hintText: 'Navn'),
            ),
            TextField(
              controller: _descriptionController,
              decoration: const InputDecoration(hintText: 'Beskrivelse'),
            ),
            ElevatedButton(
              onPressed: _createBarber,
              child: const Text('Opret Barber'),
            ),
          ],
        ),
      ),
    );
  }

  void _createBarber() {
    if (_nameController.text.isNotEmpty && _descriptionController.text.isNotEmpty) {
      final barberRepository = context.read<BarberRepository>();
      barberRepository.createBarber(_nameController.text, _descriptionController.text);
      Navigator.of(context).pop();
    }
  }

  @override
  void dispose() {
    _nameController.dispose();
    _descriptionController.dispose();
    super.dispose();
  }
}
